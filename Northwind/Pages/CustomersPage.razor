@page "/customers"

@inject HttpClient Http

<PageTitle>Customers</PageTitle>
<h3>Customers</h3>

<div class="text-center">
<Pagination CurrentPage="@CurrentPage" LastPage="@LastPage" OnPageChange="HandlePageChange" />
</div>

@if (Customers != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Customer ID</th>
                <th>Company Name</th>
                <th>Contact Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (CustomerShortDTO customer in Customers)
            {
                <tr>
                    <td>@customer.CustomerId</td>
                    <td>@customer.CompanyName</td>
                    <td>@customer.ContactName</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private int CurrentPage { get; set; }
    private int LastPage { get; set; }
    private List<CustomerShortDTO> Customers { get; set; } = new();

    private async void HandlePageChange(int page)
    {
        CustomerPageDTO data = await Http.GetFromJsonAsync<CustomerPageDTO>(Endpoints.GetCustomersPage(page));
        Customers = data.Customers;
        LastPage = data.LastPage;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        CustomerPageDTO data = await Http.GetFromJsonAsync<CustomerPageDTO>(Endpoints.GetCustomersPage(1));
        Customers = data.Customers;
        LastPage = data.LastPage;
    }
}
